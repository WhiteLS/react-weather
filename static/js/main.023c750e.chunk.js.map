{"version":3,"sources":["redux/reducer.js","redux/store.js","redux/action.js","components/CardHourly.jsx","components/CardSelect.jsx","components/CardNow.jsx","components/CardTomorrow.jsx","components/CardTwoDays.jsx","components/Header.jsx","components/SevenDays.jsx","App.jsx","index.js"],"names":["initialState","items","current","weather","hourly","daily","select","temp","feels_like","pop","pressure","wind_speed","humidity","city","isLoaded","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","fetchWeather","lat","lon","dispatch","a","url","axios","get","response","data","setWeather","SwiperCore","use","Navigation","CardHourly","useDispatch","handleClick","e","useSelector","date","Date","useEffect","className","getDate","getMonth","slidesPerView","slidesPerGroup","navigation","nextEl","prevEl","map","item","index","dt","onClick","getHours","src","icon","alt","description","Math","round","CardSelect","currentHour","colSpan","CardNow","cityName","getMinutes","getDay","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","version","id","x","y","gradientUnits","x1","y1","x2","y2","gradientTransform","CardTomorrow","tomorrow","filteredHours","filter","setDate","CardTwoDays","Header","useState","cities","setCities","value","setValue","filtered","name","toLowerCase","includes","toLocaleLowerCase","fetchCities","onSubmit","preventDefault","htmlFor","placeholder","autoComplete","onChange","target","length","slice","i","coords","handleSelectCity","to","SevenDays","days","console","log","weekday","month","morn","day","eve","night","min","max","uvi","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.023c750e.chunk.js","sourcesContent":["const initialState = {\r\n  items: {\r\n    current: {\r\n      weather: [{}],\r\n    },\r\n    hourly: [],\r\n    daily: [],\r\n  },\r\n  select: {\r\n    temp: '',\r\n    feels_like: '',\r\n    pop: '',\r\n    pressure: '',\r\n    wind_speed: '',\r\n    humidity: '',\r\n    weather: [{ weather: '' }],\r\n  },\r\n  city: '',\r\n  isLoaded: false,\r\n};\r\n\r\nconst weather = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_WEATHER':\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        isLoaded: true,\r\n      };\r\n\r\n    case 'SET_SELECT':\r\n      return {\r\n        ...state,\r\n        select: action.payload,\r\n      };\r\n\r\n    case 'SET_CITY':\r\n      return {\r\n        ...state,\r\n        city: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weather;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport weather from './reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(weather, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nexport const setLoaded = (payload) => ({\r\n  type: 'SET_LOADED',\r\n  payload,\r\n});\r\n\r\nexport const fetchWeather =\r\n  (lat = 55.75, lon = 37.62) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: 'SET_LOADED',\r\n      payload: false,\r\n    });\r\n\r\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=alerts,minutely&appid=0f662c3c3a55466e8f4cbc5846c72b91&units=metric&lang=ru`;\r\n\r\n    const response = await axios.get(url);\r\n    // .then(({ data }) => {\r\n    //   dispatch(setWeather(data));\r\n    // });\r\n    const data = await response.data;\r\n    dispatch(setWeather(data));\r\n    return data;\r\n  };\r\n\r\nexport const setWeather = (items) => ({\r\n  type: 'SET_WEATHER',\r\n  payload: items,\r\n});\r\n\r\nexport const setSelect = (items) => ({\r\n  type: 'SET_SELECT',\r\n  payload: items,\r\n});\r\n\r\nexport const setCity = (items) => ({\r\n  type: 'SET_CITY',\r\n  payload: items,\r\n});\r\n","import { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSelect } from './../redux/action';\r\nimport { useEffect } from 'react';\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nfunction CardHourly({ hourly }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (e) => {\r\n    dispatch(setSelect(hourly[e]));\r\n  };\r\n\r\n  const isLoaded = useSelector(({ isLoaded }) => isLoaded);\r\n  const date = new Date();\r\n  const month = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    isLoaded && handleClick(0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLoaded]);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"main__hourly\">\r\n        <div className=\"main__hourly__buttons\">\r\n          <button className=\"button button--hourly button--radius\">\r\n            {date.getDate()} {month[date.getMonth()]}\r\n          </button>\r\n        </div>\r\n        <div className=\"card card--hourly\">\r\n          <div className=\"swiper-button-prev\"></div>\r\n          <ul className=\"card__main__weather__mini\">\r\n            <Swiper\r\n              slidesPerView={9}\r\n              slidesPerGroup={3}\r\n              navigation={{\r\n                nextEl: '.swiper-button-next',\r\n                prevEl: '.swiper-button-prev',\r\n              }}>\r\n              {hourly.map((item, index) => {\r\n                const date = new Date(item.dt * 1000);\r\n                return (\r\n                  <SwiperSlide key={item.dt} onClick={() => handleClick(index)}>\r\n                    <li>\r\n                      <span className=\"date\">\r\n                        {(date.getDate() < 10 ? '0' : '') + date.getDate()}.\r\n                        {(date.getMonth() < 10 ? '0' : '') + (date.getMonth() + 1)}\r\n                      </span>\r\n                      <span className=\"time\">\r\n                        {(date.getHours() < 10 ? '0' : '') + date.getHours()}:00\r\n                      </span>\r\n                      {/* <object\r\n                        data={'../assets/' + item.weather[0].icon + '.svg'}\r\n                        type=\"image/svg+xml\">\r\n                        <img src={'../assets/' + item.weather[0].icon + '.svg'} />\r\n                      </object> */}\r\n                      <img\r\n                        src={'../assets/' + item.weather[0].icon + '.svg'}\r\n                        alt={item.weather[0].description}\r\n                      />\r\n                      {/* <img\r\n                        src={'http://openweathermap.org/img/wn/' + item.weather[0].icon + '@4x.png'}\r\n                        alt={item.weather[0].description}\r\n                      /> */}\r\n                      <span className=\"temp\">+{Math.round(item.temp)}&deg;</span>\r\n                    </li>\r\n                  </SwiperSlide>\r\n                );\r\n              })}\r\n            </Swiper>\r\n          </ul>\r\n          <div className=\"swiper-button-next\"></div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardHourly;\r\n","import { useSelector } from 'react-redux';\r\n\r\nfunction CardSelect() {\r\n  const currentHour = useSelector(({ select }) => select);\r\n\r\n  const month = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря',\r\n  ];\r\n\r\n  const date = new Date(currentHour.dt * 1000);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"main__table\">\r\n        <div className=\"main__table__date button button--radius button--desc\">\r\n          <p>\r\n            {date.getDate()} {month[date.getMonth()]},{' '}\r\n            {(date.getHours() < 10 ? '0' : '') + date.getHours()}:00\r\n          </p>\r\n        </div>\r\n        <div className=\"card card--table\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"table__cell__svg\">\r\n                  {/* {currentHour.weather && (\r\n                    <img\r\n                      src={'../assets/' + currentHour.weather[0].icon + '.svg'}\r\n                      alt={currentHour.weather[0].description}\r\n                    />\r\n                  )} */}\r\n                  <img\r\n                    src={'../assets/' + currentHour.weather[0].icon + '.svg'}\r\n                    alt={currentHour.weather[0].description}\r\n                  />\r\n                </td>\r\n                <td className=\"table__cell__temp\">+{Math.round(currentHour.temp)}&deg;</td>\r\n                <td className=\"table__cell_explanation\">Ощущается как, &deg;С</td>\r\n                <td className=\"table__cell_explanation\">Вероятность осадков, %</td>\r\n                <td className=\"table__cell_explanation\">\r\n                  Давление, <br />\r\n                  мм рт. ст.\r\n                </td>\r\n                <td className=\"table__cell_explanation\">Ветер, м/с</td>\r\n                <td className=\"table__cell_explanation\">Влажность воздуха</td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\" className=\"table__cell__cloudy\">\r\n                  облачно с прояснениями\r\n                </td>\r\n                <td>+{Math.round(currentHour.feels_like)}&deg;</td>\r\n                <td>{Math.round(currentHour.pop * 100)}%</td>\r\n                <td>{Math.round((currentHour.pressure * 3) / 4)}</td>\r\n                <td>{currentHour.wind_speed}</td>\r\n                <td>{currentHour.humidity}%</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSelect;\r\n","import React from 'react';\r\n\r\nfunction CardNow({ current, cityName = 'Москва' }) {\r\n  // console.log(current);\r\n  const date = new Date(current.dt * 1000);\r\n\r\n  const weekday = [\r\n    'Воскресенье',\r\n    'Понедельник',\r\n    'Вторник',\r\n    'Среда',\r\n    'Четверг',\r\n    'Пятница',\r\n    'Суббота',\r\n  ];\r\n  const month = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря',\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card card--today\">\r\n      <div className=\"card__text\">\r\n        <div className=\"card__text__box\">\r\n          <p>\r\n            Погода в: <span className=\"city\">{cityName ? cityName : 'Москва'}</span>\r\n          </p>\r\n          <p>\r\n            Сейчас {date.getHours()}:{(date.getMinutes() < 10 ? '0' : '') + date.getMinutes()},{' '}\r\n            {weekday[date.getDay()]}\r\n          </p>\r\n        </div>\r\n        <h3>\r\n          <span className=\"day\">{date.getDate()}</span>{' '}\r\n          <span className=\"month\">{month[date.getMonth()]}</span>\r\n        </h3>\r\n      </div>\r\n      <div className=\"card__main\">\r\n        {/* <object data={'../assets/' + current.weather[0].icon + '.svg'} type=\"image/svg+xml\">\r\n          <img src={'../assets/' + current.weather[0].icon + '.svg'} alt={current.weather[0].description} />\r\n        </object> */}\r\n        <img\r\n          src={'../assets/' + current.weather[0].icon + '.svg'}\r\n          alt={current.weather[0].description}\r\n        />\r\n        {/* <img\r\n          src={'http://openweathermap.org/img/wn/' + current.weather[0].icon + '@4x.png'}\r\n          alt={current.weather[0].description}\r\n        /> */}\r\n        <div className=\"card__main__box\">\r\n          <p className=\"card__main__box__temp\">\r\n            <span className=\"card__main__box__temp--now\">+{Math.round(current.temp)}&deg;</span>,\r\n            ощущается как\r\n            <span className=\"card__main__box__temp--likes\">\r\n              {' '}\r\n              +{Math.round(current.feels_like)}&deg;\r\n            </span>\r\n          </p>\r\n          <p className=\"card__main__box__cloudiness\">{current.weather[0].description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"card__footer\">\r\n        <ul className=\"card__footer__weather\">\r\n          <li className=\"card__footer__weather__item wind\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"wind\"\r\n              className=\"svg-inline--fa fa-wind fa-w-16\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M156.7 256H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h142.2c15.9 0 30.8 10.9 33.4 26.6 3.3 20-12.1 37.4-31.6 37.4-14.1 0-26.1-9.2-30.4-21.9-2.1-6.3-8.6-10.1-15.2-10.1H81.6c-9.8 0-17.7 8.8-15.9 18.4 8.6 44.1 47.6 77.6 94.2 77.6 57.1 0 102.7-50.1 95.2-108.6C249 291 205.4 256 156.7 256zM16 224h336c59.7 0 106.8-54.8 93.8-116.7-7.6-36.2-36.9-65.5-73.1-73.1-55.4-11.6-105.1 24.9-114.9 75.5-1.9 9.6 6.1 18.3 15.8 18.3h32.8c6.7 0 13.1-3.8 15.2-10.1C325.9 105.2 337.9 96 352 96c19.4 0 34.9 17.4 31.6 37.4-2.6 15.7-17.4 26.6-33.4 26.6H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16zm384 32H243.7c19.3 16.6 33.2 38.8 39.8 64H400c26.5 0 48 21.5 48 48s-21.5 48-48 48c-17.9 0-33.3-9.9-41.6-24.4-2.9-5-8.7-7.6-14.5-7.6h-33.8c-10.9 0-19 10.8-15.3 21.1 17.8 50.6 70.5 84.8 129.4 72.3 41.2-8.7 75.1-41.6 84.7-82.7C526 321.5 470.5 256 400 256z\"></path>\r\n            </svg>\r\n            {current.wind_speed} м/с\r\n          </li>\r\n          <li className=\"card__footer__weather__item humidity\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"tint\"\r\n              className=\"svg-inline--fa fa-tint fa-w-11\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 352 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M205.22 22.09c-7.94-28.78-49.44-30.12-58.44 0C100.01 179.85 0 222.72 0 333.91 0 432.35 78.72 512 176 512s176-79.65 176-178.09c0-111.75-99.79-153.34-146.78-311.82zM176 448c-61.75 0-112-50.25-112-112 0-8.84 7.16-16 16-16s16 7.16 16 16c0 44.11 35.89 80 80 80 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"></path>\r\n            </svg>\r\n            {current.humidity}%\r\n          </li>\r\n          <li className=\"card__footer__weather__item pressure\">\r\n            <svg\r\n              version=\"1.1\"\r\n              id=\"Capa_1\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              viewBox=\"0 0 512 512\">\r\n              <linearGradient\r\n                id=\"SVGID_1_\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n                x1=\"256\"\r\n                y1=\"514\"\r\n                x2=\"256\"\r\n                y2=\"2\"\r\n                gradientTransform=\"matrix(1 0 0 -1 0 514)\"></linearGradient>\r\n              <path\r\n                d=\"M419,340c0,11.046-8.954,20-20,20s-20-8.954-20-20s8.954-20,20-20S419,328.954,419,340z\r\n                          M110,197c11.046,0,20-8.954,20-20s-8.954-20-20-20s-20,8.954-20,20S98.954,197,110,197z M168,136c11.046,0,20-8.954,20-20\r\n                          s-8.954-20-20-20s-20,8.954-20,20S156.954,136,168,136z M512,256c0,68.38-26.629,132.667-74.98,181.02\r\n                          C388.667,485.371,324.38,512,256,512s-132.667-26.629-181.02-74.98C26.629,388.667,0,324.38,0,256S26.629,123.333,74.98,74.98\r\n                          C123.333,26.629,187.62,0,256,0s132.667,26.629,181.02,74.98C485.371,123.333,512,187.62,512,256z M472,256\r\n                          c0-119.103-96.897-216-216-216S40,136.897,40,256s96.897,216,216,216S472,375.103,472,256z M395.5,114.5L293,141l23.858,23.858\r\n                          L155.852,325.864c-22.298-10.622-49.842-6.727-68.278,11.709l28.285,28.284c3.777-3.777,8.8-5.858,14.142-5.858\r\n                          s10.364,2.081,14.142,5.858c3.778,3.778,5.858,8.8,5.858,14.142s-2.08,10.365-5.858,14.142l28.285,28.284\r\n                          c18.436-18.436,22.331-45.98,11.709-68.278l161.006-161.006L369,217L395.5,114.5z M256,110c11.046,0,20-8.954,20-20s-8.954-20-20-20\r\n                          s-20,8.954-20,20S244.954,110,256,110z M110,256c0-11.046-8.954-20-20-20s-20,8.954-20,20c0,11.046,8.954,20,20,20\r\n                          S110,267.046,110,256z M422,236c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20s20-8.954,20-20C442,244.954,433.046,236,422,236z\r\n                          \"\r\n              />\r\n            </svg>\r\n            {Math.round((current.pressure * 3) / 4)} мм рт. ст.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardNow;\r\n","function CardTomorrow({ tomorrow, cityName }) {\r\n  // console.log(\r\n  //   tomorrow.map((item) => {\r\n  //     // return new Date(item.dt * 1000).getHours() % 6 ? null : item;\r\n  //     // if (new Date(item.dt * 1000).getHours() % 6 == 0) {\r\n  //     //   if (new Date(item.dt * 1000).getDate() !== new Date().getDate()) return item;\r\n  //     // } else {\r\n  //     //   return;\r\n  //     // }\r\n  //     if (new Date(item.dt * 1000).getDate() === new Date().getDate() + 1) {\r\n  //       if (new Date(item.dt * 1000).getHours() % 6 == 0) return item;\r\n  //     }\r\n  //   }),\r\n  // );\r\n  // const filteredHours = tomorrow.map((item) => {\r\n  //   if (new Date(item.dt * 1000).getDate() === new Date().getDate() + 1) {\r\n  //     if (new Date(item.dt * 1000).getHours() % 6 == 0) {\r\n  //       return item;\r\n  //     } else {\r\n  //       return null;\r\n  //     }\r\n  //   }\r\n  // });\r\n  // const filteredHours = tomorrow.filter((item) => {\r\n  //   const date = new Date(item.dt * 1000);\r\n  //   if (date.getDate() === new Date().getDate() + 1) {\r\n  //     return date.getHours() % 6 == 0 ? item : null;\r\n  //   }\r\n  // });\r\n  const filteredHours = tomorrow.filter((item) => {\r\n    const date = new Date(item.dt * 1000);\r\n    return date.getDate() === new Date().getDate() + 1 && date.getHours() % 6 === 0;\r\n  });\r\n\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + 1);\r\n\r\n  const month = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря',\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card card--tomorrow\">\r\n      <div className=\"card__text\">\r\n        <div className=\"card__text__box\">\r\n          <p>\r\n            Погода в: <span className=\"city\">{cityName ? cityName : 'Москва'}</span>\r\n          </p>\r\n          <p>На завтра</p>\r\n        </div>\r\n        <h3>\r\n          <span className=\"day\">{date.getDate()}</span>{' '}\r\n          <span className=\"month\">{month[date.getMonth()]}</span>\r\n        </h3>\r\n      </div>\r\n      <div className=\"card__main\">\r\n        <div className=\"card__main__weather\">\r\n          <ul className=\"card__main__weather__mini\">\r\n            {filteredHours &&\r\n              filteredHours.map((item) => {\r\n                const date = new Date(item.dt * 1000);\r\n                return (\r\n                  <li key={item.dt}>\r\n                    <span className=\"tod\">\r\n                      {(date.getHours() < 10 ? '0' : '') + date.getHours()}:00\r\n                    </span>\r\n                    {/* <object\r\n                      data={'../assets/' + item.weather[0].icon + '.svg'}\r\n                      type=\"image/svg+xml\">\r\n                      <img src={'../assets/' + item.weather[0].icon + '.svg'} alt={item.weather[0].description} />\r\n                    </object> */}\r\n                    <img\r\n                      src={'../assets/' + item.weather[0].icon + '.svg'}\r\n                      alt={item.weather[0].description}\r\n                    />\r\n                    {/* <img\r\n                      src={'http://openweathermap.org/img/wn/' + item.weather[0].icon + '@4x.png'}\r\n                      alt={item.weather[0].description}\r\n                    /> */}\r\n                    <span className=\"temp\">+{Math.round(item.temp)}&deg;</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardTomorrow;\r\n","import React from 'react';\r\nimport CardHourly from './CardHourly';\r\nimport CardSelect from './CardSelect';\r\nimport CardNow from './CardNow';\r\nimport CardTomorrow from './CardTomorrow';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction CardTwoDays() {\r\n  const current = useSelector(({ items }) => items.current);\r\n  const hourly = useSelector(({ items }) => items.hourly);\r\n  const cityName = useSelector(({ city }) => city);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"main__card\">\r\n        <CardNow current={current} cityName={cityName} />\r\n        <CardTomorrow tomorrow={hourly} cityName={cityName} />\r\n      </section>\r\n      <CardHourly hourly={hourly} />\r\n      <CardSelect />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardTwoDays;\r\n","import { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { fetchWeather, setCity } from './../redux/action';\r\n\r\nfunction Header() {\r\n  const [cities, setCities] = useState([]);\r\n  const [value, setValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  // const fetchCities = async () => {\r\n  //   const response = await axios.get('https://myjson.dit.upm.es/api/bins/fy2');\r\n  //   const data = await response.data;\r\n  //   setCities(data);\r\n  // };\r\n\r\n  const filtered = cities.filter((city) => {\r\n    return city.name.toLowerCase().includes(value.toLocaleLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchCities = async () => {\r\n      const response = await axios.get('https://myjson.dit.upm.es/api/bins/fy2');\r\n      const data = await response.data;\r\n      setCities(data);\r\n    };\r\n\r\n    fetchCities();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSelectCity = (i) => {\r\n    dispatch(setCity(filtered[i].name));\r\n    dispatch(fetchWeather(filtered[i].coords.lat, filtered[i].coords.lon));\r\n    // setValue(filtered[i].name);\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"wrapper\">\r\n        <nav className=\"nav\">\r\n          <ul className=\"nav__list\">\r\n            <li className=\"nav__list__item nav__list__item--first\">\r\n              <form className=\"d-flex align-center pos-r\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"city-select\">\r\n                  <svg\r\n                    aria-hidden=\"true\"\r\n                    focusable=\"false\"\r\n                    data-prefix=\"fas\"\r\n                    data-icon=\"map-marker-alt\"\r\n                    className=\"svg-inline--fa fa-map-marker-alt fa-w-12\"\r\n                    role=\"img\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 384 512\">\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"></path>\r\n                  </svg>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"city-select\"\r\n                  // list=\"datalist\"\r\n                  value={value}\r\n                  placeholder=\"Введите город...\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setValue(e.target.value)}\r\n                />\r\n                {value && filtered.length >= 1 && (\r\n                  <ul className=\"suggest\">\r\n                    {filtered.slice(0, 10).map((item, i) => {\r\n                      return (\r\n                        <li\r\n                          className=\"suggest__item\"\r\n                          key={item.name}\r\n                          onClick={() => handleSelectCity(i)}>\r\n                          {item.name}\r\n                          {/* + ', ' + item.district + ' край или район или чё там' */}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                )}\r\n                {/* <datalist\r\n                  id=\"datalist\"\r\n                  onClick={(e) => console.log(e)}\r\n                  onChange={(item) => console.log(item)}>\r\n                  {value &&\r\n                    filtered.slice(0, 10).map((item) => {\r\n                      return (\r\n                        <option\r\n                          value={item.name + ', ' + item.district + ' край или район или чё там'}\r\n                          key={item.name}\r\n                          onClick={(item) => console.log(item)}\r\n                          onChange={(item) => console.log(item)}\r\n                          onKeyPress={(item) => console.log(item)}></option>\r\n                      );\r\n                    })}\r\n                </datalist> */}\r\n              </form>\r\n            </li>\r\n            <Link to=\"/\">\r\n              <li className=\"button nav__list__item\">\r\n                <p>Погода на 2 дня</p>\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/seven-days\">\r\n              <li className=\"button nav__list__item\">\r\n                <p>Погода на 7 дней</p>\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction SevenDays() {\r\n  const days = useSelector(({ items }) => items.daily);\r\n  const cityName = useSelector(({ city }) => city);\r\n  console.log(days);\r\n\r\n  const weekday = [\r\n    'Воскресенье',\r\n    'Понедельник',\r\n    'Вторник',\r\n    'Среда',\r\n    'Четверг',\r\n    'Пятница',\r\n    'Суббота',\r\n  ];\r\n  const month = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря',\r\n  ];\r\n\r\n  return (\r\n    <div className=\"main__sevenDay\">\r\n      <h2>Погода в: {cityName ? cityName : 'Москва'}</h2>\r\n      {days.map((item) => {\r\n        const date = new Date(item.dt * 1000);\r\n        return (\r\n          <div className=\"card card--seven\" key={item.dt}>\r\n            <div className=\"card--seven__box\">\r\n              <div className=\"time_of_day__box\">\r\n                <h2>\r\n                  {weekday[date.getDay()]}, {date.getDate()} {month[date.getMonth()]}\r\n                </h2>\r\n                <ul className=\"time_of_day\">\r\n                  <li>\r\n                    <span>Утром</span>\r\n                    <span className=\"temp\">+{Math.round(item.temp.morn)}&deg;</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>Днём</span>\r\n                    <span className=\"temp\">+{Math.round(item.temp.day)}&deg;</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>Вечером</span>\r\n                    <span className=\"temp\">+{Math.round(item.temp.eve)}&deg;</span>\r\n                  </li>\r\n                  <li>\r\n                    <span>Ночью</span>\r\n                    <span className=\"temp\">+{Math.round(item.temp.night)}&deg;</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"cloudiness__box\">\r\n                {/* <object\r\n                  data={'../assets/' + item.weather[0].icon + '.svg'}\r\n                  type=\"image/svg+xml\"></object> */}\r\n                <img\r\n                  src={'../assets/' + item.weather[0].icon + '.svg'}\r\n                  alt={item.weather[0].description}\r\n                />\r\n                {/* <img\r\n                  src={'http://openweathermap.org/img/wn/' + item.weather[0].icon + '@4x.png'}\r\n                  alt={item.weather[0].description}\r\n                /> */}\r\n                <div className=\"card__main__box\">\r\n                  <p className=\"card__main__box__temp\">\r\n                    <span className=\"card__main__box__temp--now\">\r\n                      +{Math.round(item.temp.min)}&deg;...{Math.round(item.temp.max)}&deg;\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"card__main__box__cloudiness\">{item.weather[0].description}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <table className=\"weather-props\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Влажность</th>\r\n                  <th>\r\n                    Давление,\r\n                    <br />\r\n                    мм рт. ст.\r\n                  </th>\r\n                  <th>Вероятность осадков</th>\r\n                  <th>Ветер, м/с</th>\r\n                  <th>Ультрафиолет</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{item.humidity}%</td>\r\n                  <td>{Math.round((item.pressure * 3) / 4)}</td>\r\n                  <td>{item.pop * 100}%</td>\r\n                  <td>{item.wind_speed}</td>\r\n                  <td>{item.uvi}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SevenDays;\r\n","import { Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchWeather } from './redux/action';\n\nimport CardTwoDays from './components/CardTwoDays';\nimport Header from './components/Header';\nimport SevenDays from './components/SevenDays';\nimport { useEffect } from 'react';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoaded = useSelector(({ isLoaded }) => isLoaded);\n\n  useEffect(() => {\n    dispatch(fetchWeather());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"page\">\n        <Header />\n        {isLoaded ? (\n          <main>\n            <Route path=\"/\" component={CardTwoDays} exact />\n            <Route path=\"/seven-days\" component={SevenDays} exact />\n          </main>\n        ) : (\n          'loadingggg'\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport App from './App';\nimport './scss/style.scss';\nimport 'macro-css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}